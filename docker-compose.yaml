version: '3.7'

services:
  # test nats broker
  nats:
    image: nats
    ports:
      - "4222:4222"
    networks:
      - dev

  # test kafka
  zoo:
    image: zookeeper:3.4.9
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo:2888:3888
    networks:
      - dev

  kafka:
    image: confluentinc/cp-kafka:6.1.2
    ports:
      - "9092:9092"
      - "9999:9999"
    depends_on:
      - zoo
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
    networks:
      - dev

  # bundle store
  nginx:
    image: nginx
    volumes:
      - "./test/nginx:/usr/share/nginx/html"
    ports:
      - 8881:80
    networks:
      - dev
    environment:
      - NGINX_PORT=80

  # opa server
  opa1:
    build: ./
    volumes:
      - "./test/opa/config.yaml:/app/config.yaml"
    networks:
      - dev
    ports:
      - "8181:8181"
    command: run --server -c /app/config.yaml --log-level debug
  
  # opa server
  opa2:
    build: ./
    volumes:
      - "./test/opa/config.yaml:/app/config.yaml"
    networks:
      - dev
    ports:
      - "8182:8181"
    command: run --server -c /app/config.yaml --log-level debug

networks:
  dev: